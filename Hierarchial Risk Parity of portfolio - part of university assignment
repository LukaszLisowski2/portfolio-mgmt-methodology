{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Hierarchial Risk Parity.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyPxTsgrg+HuEVTMjb9tiUxW",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/LukaszLisowski2/MyProjects/blob/main/Hierarchial%20Risk%20Parity%20of%20portfolio%20-%20part%20of%20university%20assignment\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "83ef6Y3QF86W",
        "outputId": "1b108a57-b783-4b22-f9fc-7803633cd7c6"
      },
      "source": [
        "pip install pyportfolioopt"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pyportfolioopt\n",
            "  Downloading PyPortfolioOpt-1.5.1-py3-none-any.whl (61 kB)\n",
            "\u001b[K     |████████████████████████████████| 61 kB 2.7 MB/s \n",
            "\u001b[?25hCollecting cvxpy<2.0.0,>=1.1.10\n",
            "  Downloading cvxpy-1.1.15-cp37-cp37m-manylinux_2_24_x86_64.whl (2.7 MB)\n",
            "\u001b[K     |████████████████████████████████| 2.7 MB 8.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: scipy<2.0,>=1.3 in /usr/local/lib/python3.7/dist-packages (from pyportfolioopt) (1.4.1)\n",
            "Requirement already satisfied: numpy<2.0,>=1.12 in /usr/local/lib/python3.7/dist-packages (from pyportfolioopt) (1.19.5)\n",
            "Requirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.7/dist-packages (from pyportfolioopt) (1.1.5)\n",
            "Requirement already satisfied: scs>=1.1.6 in /usr/local/lib/python3.7/dist-packages (from cvxpy<2.0.0,>=1.1.10->pyportfolioopt) (2.1.4)\n",
            "Requirement already satisfied: ecos>=2 in /usr/local/lib/python3.7/dist-packages (from cvxpy<2.0.0,>=1.1.10->pyportfolioopt) (2.0.7.post1)\n",
            "Requirement already satisfied: osqp>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from cvxpy<2.0.0,>=1.1.10->pyportfolioopt) (0.6.2.post0)\n",
            "Requirement already satisfied: qdldl in /usr/local/lib/python3.7/dist-packages (from osqp>=0.4.1->cvxpy<2.0.0,>=1.1.10->pyportfolioopt) (0.1.5.post0)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19->pyportfolioopt) (2018.9)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19->pyportfolioopt) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.19->pyportfolioopt) (1.15.0)\n",
            "Installing collected packages: cvxpy, pyportfolioopt\n",
            "  Attempting uninstall: cvxpy\n",
            "    Found existing installation: cvxpy 1.0.31\n",
            "    Uninstalling cvxpy-1.0.31:\n",
            "      Successfully uninstalled cvxpy-1.0.31\n",
            "Successfully installed cvxpy-1.1.15 pyportfolioopt-1.5.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bUVi8PTuz-FV",
        "outputId": "03c919b7-69a7-4ca1-d5ed-bc12bb716644"
      },
      "source": [
        "pip install yfinance"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting yfinance\n",
            "  Downloading yfinance-0.1.64.tar.gz (26 kB)\n",
            "Requirement already satisfied: pandas>=0.24 in /usr/local/lib/python3.7/dist-packages (from yfinance) (1.1.5)\n",
            "Requirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from yfinance) (1.19.5)\n",
            "Requirement already satisfied: requests>=2.20 in /usr/local/lib/python3.7/dist-packages (from yfinance) (2.23.0)\n",
            "Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from yfinance) (0.0.9)\n",
            "Collecting lxml>=4.5.1\n",
            "  Downloading lxml-4.6.3-cp37-cp37m-manylinux2014_x86_64.whl (6.3 MB)\n",
            "\u001b[K     |████████████████████████████████| 6.3 MB 5.2 MB/s \n",
            "\u001b[?25hRequirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24->yfinance) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24->yfinance) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.24->yfinance) (1.15.0)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.20->yfinance) (1.24.3)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.20->yfinance) (3.0.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.20->yfinance) (2021.5.30)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.20->yfinance) (2.10)\n",
            "Building wheels for collected packages: yfinance\n",
            "  Building wheel for yfinance (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for yfinance: filename=yfinance-0.1.64-py2.py3-none-any.whl size=24109 sha256=6fcde98124efcd06c460e470796c1624ba92afcd85850b9585f4acc916c8fe7c\n",
            "  Stored in directory: /root/.cache/pip/wheels/86/fe/9b/a4d3d78796b699e37065e5b6c27b75cff448ddb8b24943c288\n",
            "Successfully built yfinance\n",
            "Installing collected packages: lxml, yfinance\n",
            "  Attempting uninstall: lxml\n",
            "    Found existing installation: lxml 4.2.6\n",
            "    Uninstalling lxml-4.2.6:\n",
            "      Successfully uninstalled lxml-4.2.6\n",
            "Successfully installed lxml-4.6.3 yfinance-0.1.64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        },
        "id": "pHf-gAtxDv5J",
        "outputId": "f6270408-af79-442e-acbc-9a8a5e028103"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import yfinance as yf\n",
        "import pypfopt\n",
        "\n",
        "\n",
        "stocks = [\"GS\",\"BCS\",\"MSFT\",\"PYPL\",\"GOOGL\",\"VOW3.DE\",\"ZS\",\"CRWD\",\"AAPL\",\"SOFI\"]\n",
        "\n",
        "retrieve = yf.download(stocks, period = \"1Y\")\n",
        "prices = retrieve[\"Adj Close\"]\n",
        "prices.tail()\n",
        "\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[*********************100%***********************]  10 of 10 completed\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AAPL</th>\n",
              "      <th>BCS</th>\n",
              "      <th>CRWD</th>\n",
              "      <th>GOOGL</th>\n",
              "      <th>GS</th>\n",
              "      <th>MSFT</th>\n",
              "      <th>PYPL</th>\n",
              "      <th>SOFI</th>\n",
              "      <th>VOW3.DE</th>\n",
              "      <th>ZS</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-10-25</th>\n",
              "      <td>148.639999</td>\n",
              "      <td>11.180</td>\n",
              "      <td>280.100006</td>\n",
              "      <td>2748.939941</td>\n",
              "      <td>414.750000</td>\n",
              "      <td>308.130005</td>\n",
              "      <td>246.880005</td>\n",
              "      <td>20.690001</td>\n",
              "      <td>205.250000</td>\n",
              "      <td>311.200012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-26</th>\n",
              "      <td>149.320007</td>\n",
              "      <td>11.270</td>\n",
              "      <td>287.079987</td>\n",
              "      <td>2786.169922</td>\n",
              "      <td>417.609985</td>\n",
              "      <td>310.109985</td>\n",
              "      <td>243.000000</td>\n",
              "      <td>19.959999</td>\n",
              "      <td>206.100006</td>\n",
              "      <td>315.320007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-27</th>\n",
              "      <td>148.850006</td>\n",
              "      <td>11.080</td>\n",
              "      <td>279.000000</td>\n",
              "      <td>2924.350098</td>\n",
              "      <td>410.989990</td>\n",
              "      <td>323.170013</td>\n",
              "      <td>234.940002</td>\n",
              "      <td>19.250000</td>\n",
              "      <td>203.899994</td>\n",
              "      <td>310.100006</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-28</th>\n",
              "      <td>152.570007</td>\n",
              "      <td>11.200</td>\n",
              "      <td>281.170013</td>\n",
              "      <td>2916.979980</td>\n",
              "      <td>414.820007</td>\n",
              "      <td>324.350006</td>\n",
              "      <td>236.830002</td>\n",
              "      <td>19.910000</td>\n",
              "      <td>194.779999</td>\n",
              "      <td>316.339996</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-29</th>\n",
              "      <td>149.320007</td>\n",
              "      <td>11.214</td>\n",
              "      <td>282.730011</td>\n",
              "      <td>2958.479980</td>\n",
              "      <td>414.859985</td>\n",
              "      <td>328.910004</td>\n",
              "      <td>235.580002</td>\n",
              "      <td>19.779499</td>\n",
              "      <td>193.820007</td>\n",
              "      <td>319.529999</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                  AAPL     BCS        CRWD  ...       SOFI     VOW3.DE          ZS\n",
              "Date                                        ...                                   \n",
              "2021-10-25  148.639999  11.180  280.100006  ...  20.690001  205.250000  311.200012\n",
              "2021-10-26  149.320007  11.270  287.079987  ...  19.959999  206.100006  315.320007\n",
              "2021-10-27  148.850006  11.080  279.000000  ...  19.250000  203.899994  310.100006\n",
              "2021-10-28  152.570007  11.200  281.170013  ...  19.910000  194.779999  316.339996\n",
              "2021-10-29  149.320007  11.214  282.730011  ...  19.779499  193.820007  319.529999\n",
              "\n",
              "[5 rows x 10 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2rV48CUK2Has"
      },
      "source": [
        "from pypfopt import expected_returns\n",
        "stockreturns = expected_returns.returns_from_prices(prices)\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aMAYRqxD2jd4",
        "outputId": "d84c5893-8803-47ac-b110-5833366e66ab"
      },
      "source": [
        "\n",
        "from pypfopt import HRPOpt\n",
        "hrp = HRPOpt(stockreturns)\n",
        "hrp.optimize()\n",
        "weights = hrp.clean_weights()\n",
        "weights"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "OrderedDict([('AAPL', 0.16301),\n",
              "             ('BCS', 0.06989),\n",
              "             ('CRWD', 0.0485),\n",
              "             ('GOOGL', 0.10875),\n",
              "             ('GS', 0.23182),\n",
              "             ('MSFT', 0.14716),\n",
              "             ('PYPL', 0.08145),\n",
              "             ('SOFI', 0.01343),\n",
              "             ('VOW3.DE', 0.09105),\n",
              "             ('ZS', 0.04494)])"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 575
        },
        "id": "udJQMWqw4gfY",
        "outputId": "d552ab92-a1ae-4360-8a29-5bc8d6c026d4"
      },
      "source": [
        "pd.Series(weights).plot.pie(figsize=(10, 10));"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GOR0Axm64lPY",
        "outputId": "babd92ba-1ae5-4ea3-a277-4769d3dd2356"
      },
      "source": [
        "hrp.portfolio_performance(verbose=True);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Expected annual return: 60.1%\n",
            "Annual volatility: 17.3%\n",
            "Sharpe Ratio: 3.36\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "AQL69Q9w4phw",
        "outputId": "69ab11dc-abe2-45f8-a703-035586d4aeee"
      },
      "source": [
        "from pypfopt import plotting\n",
        "\n",
        "plotting.plot_dendrogram(hrp);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}