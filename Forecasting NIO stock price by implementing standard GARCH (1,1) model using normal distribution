{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyN9cqlDnisPdj+Il7cJYBLE",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "ir",
      "display_name": "R"
    },
    "language_info": {
      "name": "R"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/LukaszLisowski2/MyProjects/blob/main/Forecasting%20NIO%20stock%20price%20by%20implementing%20standard%20GARCH%20(1%2C1)%20model%20using%20normal%20distribution\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 128
        },
        "id": "tou7s_u_6OkH",
        "outputId": "0568c32a-35e7-41d5-d4fe-79e16cfaa995"
      },
      "source": [
        "#####UPLOADED FROM MY RSTUDIO TO RESEARCH COLAB\n",
        "\n",
        "\n",
        "library(quantmod)\n",
        "library(xts)\n",
        "library(PerformanceAnalytics)\n",
        "library(rugarch)\n",
        "\n",
        "getSymbols(\"NIO\",\n",
        "           from = \"2020-10-28\",\n",
        "           to = \"2021-10-28\")\n",
        "returns <- CalculateReturns(NIO$NIO.Close)\n",
        "returns[-1]\n",
        "hist(returns)\n",
        "chartSeries(returns, theme = 'white')\n",
        "\n",
        "\n",
        "\n",
        "sd(return)\n",
        "sqrt(252)* sd(returns[\"2021\"])\n",
        "\n",
        "chart.RollingPerformance(R = returns[\"2020-10-28::2021-10-28\"],\n",
        "                         width = 4,\n",
        "                         FUN = \"sd.annualized\",\n",
        "                         scale = 252,\n",
        "                         main = \"NIO's monthly rolling volatility\")\n",
        "\n",
        "spec2 <- ugarchspec(mean.model=list(armaOrder=c(0,0)), \n",
        "                    variance.model = list(model = \"sGARCH\"),  \n",
        "                    distribution.model = \"norm\")\n",
        "accurate_returns = na.omit(returns)\n",
        "model <- ugarchfit(spec = spec2, data = accurate_returns)\n",
        "model\n",
        "\n",
        "specfinal <- spec2\n",
        "setfixed(specfinal) <- as.list(coef(model))\n",
        "\n",
        "\n",
        "forecast2020 <- ugarchforecast(data = accurate_returns[\"/2020-10\"],\n",
        "                               fitORspec = specfinal,\n",
        "                               n.ahead = 252)\n",
        "forecast2021 <- ugarchforecast(data = accurate_returns[\"/2021-10\"],\n",
        "                               fitORspec = specfinal,\n",
        "                               n.ahead = 252)\n",
        "par(mfrow = c(2,1))\n",
        "plot(sigma(forecast2020))\n",
        "plot(sigma(forecast2021))\n",
        "\n",
        "\n",
        "sim <- ugarchpath(spec = specfinal,\n",
        "                  m.sim = 5,\n",
        "                  n.sim = 1*252,\n",
        "                  rseed = 123)                               \n",
        "\n",
        "plot.zoo(fitted(sim))\n",
        "plot.zoo(sigma(sim))\n",
        "\n",
        "\n",
        "pricesforecast <- 39.31*apply(fitted(sim), 2, 'cumsum') + 39.31\n",
        "matplot(pricesforecast, type = 'l', lwd = 3)\n"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ERROR",
          "evalue": "ignored",
          "traceback": [
            "Error in library(quantmod): there is no package called ‘quantmod’\nTraceback:\n",
            "1. library(quantmod)"
          ]
        }
      ]
    }
  ]
}